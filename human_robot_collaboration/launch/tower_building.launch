<launch>
    <env name="ROSCONSOLE_CONFIG_FILE" value="$(find human_robot_collaboration)/rosconsole.conf"/>
    <include file="$(find human_robot_collaboration)/launch/baxter_aruco.launch" />
    <include file="$(find rosbridge_server)/launch/rosbridge_websocket.launch"/>
    <include file="$(find svox_tts)/launch/svox_tts.launch" />

    <arg name="forceThresholdL"      default="2.75"/>    <!-- [N] -->
    <arg name="forceThresholdR"      default="2.0"/>    <!-- [N] -->
    <arg name="forceFilterVarianceL" default="0.001"/>
    <arg name="forceFilterVarianceR" default="1.0"/>
    <arg name="relativeForceThresholdL"   default="65.0"/>
    <arg name="relativeForceThresholdR"   default="1.0"/>

    <!-- If the robot will recover from an error or will wait the external planner's decisions -->
    <arg name="internal_recovery"    default="true"/>
    <!-- If the system should use the robot or not (useful for debugging) -->
    <arg name="use_robot"            default="true"/>

    <param name="action_provider/force_threshold_left"              value="$(arg forceThresholdL)"/>
    <param name="action_provider/force_threshold_right"             value="$(arg forceThresholdR)"/>
    <param name="action_provider/force_filter_variance_left"        value="$(arg forceFilterVarianceL)"/>
    <param name="action_provider/force_filter_variance_right"       value="$(arg forceFilterVarianceR)"/>
    <param name="action_provider/relative_force_threshold_left"     value="$(arg relativeForceThresholdL)"/>
    <param name="action_provider/relative_force_threshold_right"    value="$(arg relativeForceThresholdR)"/>

    <param name="action_provider/internal_recovery"     value="$(arg internal_recovery)"/>
    <param name="action_provider/use_robot"             value="$(arg use_robot)"/>

    <!-- Objects database for the left arm -->
    <rosparam param = "action_provider/objects_left">
        "wood_very_bottom"  : 1
        "wood_bottom"       : 2
        "wood_top"          : 3
        "white_very_bottom" : 4
        "white_bottom"      : 5
        "white_top"         : 6
        "blue_very_bottom"  : 7
        "blue_bottom"       : 8
        "blue_top"          : 9
    </rosparam>

    <node pkg="human_robot_collaboration" type="tower_action_provider" name="tower_action_provider" output="screen"/>

    <!-- BAXTER DISPLAY -->
    <include file="$(find human_robot_collaboration)/launch/baxter_display.launch">
        <arg name="onscreen_duration" value = "20.0" />
    </include>

    <!-- <node name="image_baxter_display" pkg="image_view" type="image_view" respawn="false" output="log">
        <remap from="image" to="/robot/xdisplay"/>
        <param name="autosize" value="true" />
    </node> -->

    <!-- <node pkg="human_robot_collaboration" type="remote_control_node" name="l_srv" output="screen" args="left" />
    <node pkg="human_robot_collaboration" type="remote_control_node" name="r_srv" output="screen" args="right" /> -->

    <!-- <node name="image_saver" pkg="image_view" type="image_saver" respawn="false" output="log">
        <remap from="image" to="/robot/xdisplay"/>
        <param name="autosize" value="true" />
    </node> -->

    <!-- <node name="video_recorder" pkg="image_view" type="video_recorder" respawn="false" output="log">
        <remap from="image" to="/aruco_marker_publisher/result"/>
        <param name="fps" value="30" />
    </node> -->

</launch>
